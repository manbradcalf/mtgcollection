import { readCSVObjects, CSVWriter } from "https://deno.land/x/csv/mod.ts";

const inputCSV = await Deno.open("./helvaultmini.csv");
const outputCSV = await Deno.open("./example3.csv", {
  write: true,
  create: true,
  truncate: true,
});

const writer = new CSVWriter(outputCSV, {
  columnSeparator: "\t",
  lineSeparator: "\r\n",
});

const headers = [
  "collector_number",
  "extras",
  "language",
  "name",
  "oracle_id",
  "quantity",
  "scryfall_id",
  "set_code",
  "set_name",
  "price",
];

const sleep = (millis: number) => {
  return new Promise((resolve) => setTimeout(resolve, millis));
};

// populate headers
for (const header of headers) {
  await writer.writeCell(header);
}
writer.nextLine();

// Create rows for each card
const cards = [];
for await (const obj of readCSVObjects(inputCSV)) {
  // sleep to be a scyfall good citizen
  sleep(100);
  console.log(`\nCalling Scryfall for ${obj.name}`);

  const res = await fetch(`https://api.scryfall.com/cards/${obj.scryfall_id}`);
  const data = await res.json();
  const card = Object.values(obj);
  const price = data.prices.usd;
  card.push(price);
  cards.push(card);
}

for (const card of cards) {
  let i = card.length;

  for (const cell of card) {
    i++;
    if (cell !== null) {
      await writer.writeCell(cell);
    } else if (i == card.length) {
      writer.nextLine();
    } else {
      await writer.writeCell("N/A");
    }
  }
}

inputCSV.close();
outputCSV.close();
